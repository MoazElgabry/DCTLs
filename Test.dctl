#line 2
DEFINE_UI_PARAMS(P_start,  Image start, DCTLUI_SLIDER_FLOAT, 0.873f, 0.0f, 1f, 0.001f)
DEFINE_UI_PARAMS(P_end,  Image end, DCTLUI_SLIDER_FLOAT, 0.127f, 0.0f, 1f, 0.001f)
DEFINE_UI_PARAMS(P_right,  Image Right, DCTLUI_SLIDER_FLOAT, 1f, 0.0f, 1f, 0.001f)
DEFINE_UI_PARAMS(P_left,  Image Left, DCTLUI_SLIDER_FLOAT, 0f, 0.0f, 1f, 0.001f)

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
    float3 in = make_float3(p_R, p_G, p_B);
    float3 out = in;
    float height = (float)p_Height;
    float width = (float)p_Width;
    float mod_width = P_right - P_left;

    float X = (float)p_X;
    float mod_X= mod_width-(float)p_X;
    float Y = height - (float)p_Y;
    float rY = Y / height;
    float rX = 1-(X / width);
    float3 ramp = {rX, rX, rX};


    //float2 top1 = make_float2(0.0f, P_start);
    //float2 top2 = make_float2(0.5f, 0.873f);
    //float2 top3 = make_float2(1.0f, 0.945);
    //float2 bottom1 = make_float2(0.0f, P_end);
    //float2 bottom2 = make_float2(0.5f, 0.127);
    //float2 bottom3 = make_float2(1.0f, 0.055);



    int flag = 0;

    if (  rY >= P_start || rY <= P_end )
    {
         //if (in.x < 0.00001 && in.y < 0.00001 && in.z < 0.00001) { 
            flag == 1; 
        //}
                    //out = make_float3 (1,0,0);
    }

 //image minus the black bars

        float3 scopeY = make_float3(1,1,1);
        height = (P_start - P_end);
        Y = height - rY + P_end;
        ramp = make_float3 (rX, rX, rX);

        if (flag == 0) {


        float overlayR = ramp.x >= (Y - .005f) / height && ramp.x <= (Y + .005f) / height ? scopeY.x : 0.0f;
        float overlayG = ramp.y >= (Y - .005f) / height && ramp.y <= (Y + .005f) / height ? scopeY.y : 0.0f;
        float overlayB = ramp.z >= (Y - .005f) / height && ramp.z <= (Y + .005f) / height ? scopeY.z : 0.0f;
        out.x = overlayR == 0.0f ? out.x : overlayR;
        out.y = overlayG == 0.0f ? out.y : overlayG;
        out.z = overlayB == 0.0f ? out.z : overlayB;
            //out = make_float3(0, 1, 0);
        }
      
    

    if (1-rX>= P_start -.001 && 1-rX<= P_start+.001) {out= make_float3 (1,0,0);}
    if (1-rX>= P_end -.001 && 1-rX<= P_end+.001) {out= make_float3 (1,0,0);}
    if (rY>= P_start -.001 && rY<= P_start+.001) {out= make_float3 (1,0,0);}
    if (rY>= P_end -.001 && rY<= P_end+.001) {out= make_float3 (1,0,0);}
    if (p_Y < 0.1) { out = make_float3(0, 1, 0); }

    return out;
}
